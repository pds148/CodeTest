class Solution {
    
    private final int MAXS = Integer.MAX_VALUE;
    
    public int solution(int x, int y, int n) {
        int answer = 0;
        
        int[] dps = new int[y+1];
        
        for (int i=x+1; i<y+1; i++) {
            int a = MAXS, b = MAXS, c = MAXS, d;
            
            if (isDivided(i, 2) && aboveX(x, i/2)) a = dps[i/2];
            if (isDivided(i, 3) && aboveX(x, i/3)) b = dps[i/3];
            if (aboveX(x, i-n)) c = dps[i - n];
            d = Math.min(a, b);
            d = Math.min(d, c);
            
            dps[i] = (d < MAXS) ? d + 1 : MAXS;
        }
        
        answer = (dps[y] < MAXS) ? dps[y] : -1;
        
        return answer;
    }
    
    private boolean aboveX(int x, int num) {
        return (num >= x);
    }
    
    private boolean isDivided(int num, int divide) {
        return (num / divide > 0 && num % divide == 0);
    }
}
