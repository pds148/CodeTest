import java.util.*;

class Solution {
    public int[] solution(int[] progresses, int[] speeds) {
        Stack<Integer> stacks = new Stack<>();
        
        for (int i=progresses.length-1; i>=0; i--) {
            int proge = 100 - progresses[i];
            if (proge%speeds[i] > 0) {
                stacks.push(proge/speeds[i]+1);
            } else {
                stacks.push(proge/speeds[i]);
            }
        }
        
        ArrayList<Integer> list = new ArrayList<Integer>();
        
        while(!stacks.isEmpty()) {
            int count = 1;
            int num = stacks.pop();
            while(!stacks.isEmpty()) {
                int num2 = stacks.peek();
                if (num < num2) {
                    break;
                } else {
                    count++;
                    stacks.pop();
                }
            }
            list.add(count);
        }
        
    
        int[] answer = new int[list.size()];
        
        for (int i=0; i<list.size(); i++) {
            answer[i] = list.get(i);
        }
        return answer;
    }
}
